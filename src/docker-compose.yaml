services:
  # nginx: proxy-server
  #   container_name: proxy-server
  #   image:
  #     proxy-server
  #   build:
  #     context: requirements/proxy-server/
  #     dockerfile: Dockerfile
  #   # environment:
  #   #   - name=value
  #   ports:
  #     - "443:443"
  #   # volumes:
  #   #   - wordpress:/var/www/wordpress
  #   networks:
  #     - transcendence
  #   # depends_on:
  #   #   - wordpress
  #   restart: always
  
  user-management:
    container_name: user-management
    image:
      user-management-image
    build:
      context: services/user-management/
    # environment:

    # ports:
    #   - "443:443"
    # volumes:
    #   - wordpress:/var/www/wordpress
    networks:
      - transcendence
    depends_on:
      - postgresql
    restart: always
  
  users:
    container_name: users
    image:
      users-image
    build:
      context: services/users/
    environment:
      AUTH_URL: "${AUTH_URL}"
    # ports:
    #   - "443:443"
    # volumes:
    #   - wordpress:/var/www/wordpress
    networks:
      - transcendence
    depends_on:
      - postgresql
    restart: always
  
  website:
    container_name: website
    image:
      website-image
    build:
      context: services/website/
    depends_on:
      - session-manager
      - user-management
    networks:
      - transcendence
    environment:
      CLIENT_ID : "${CLIENT_ID}"
      CLIENT_SECRET : "${CLIENT_SECRET}"
      REDIRECT_URI : "${REDIRECT_URI}"
      POSTGRES_USER : "${POSTGRES_USER}"
      POSTGRES_PASSWORD : "${POSTGRES_PASSWORD}"
      SESSION_SERVER : "${SESSION_SERVER}"
      AUTH_URL: "${AUTH_URL}"
    ports:
      - "8000:8000"
    restart: always
  
  game-server:
    container_name: game-server
    image:
      game-server-image
    build:
      context: services/game-server/
      dockerfile: Dockerfile
    depends_on:
      - user-management
      - session-manager
    ports:
      - "8001:8001"
    networks:
      - transcendence
    restart: always

  session-manager:
    container_name: session-manager
    image:
      session-manager-image
    build:
      context: services/session-manager/
      dockerfile: Dockerfile
    depends_on:
      - user-management
    networks:
      - transcendence
    environment:
      SESSION_SERVER : "${SESSION_SERVER}"
    restart: always

  postgresql:
    container_name: postgresql
    image:
      postgresql-image
    build:
      context: services/postgreSQL
    networks:
      - transcendence
    environment:
      POSTGRES_USER : "${POSTGRES_USER}"
      POSTGRES_PASSWORD : "${POSTGRES_PASSWORD}"
    restart: always

# volumes:
#   wordpress:
#     driver: local
#     driver_opts:
#       type: 'none'
#       o:  'bind'
#       device: /home/ychalant/data/wordpress
#   db:
#     driver: local
#     driver_opts:
#       type: 'none'
#       o:  'bind'
#       device: /home/ychalant/data/mariadb

networks:
  transcendence:
    driver: bridge