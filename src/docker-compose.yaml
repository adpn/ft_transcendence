services:
  proxy-server:
    container_name: proxy-server
    image:
      proxy-server-image
    build:
      context: services/proxy-server/
    ports:
      - "443:443"
    networks:
      - transcendence
    depends_on:
      - postgresql
    restart: always

  users:
    container_name: users
    image:
      users-image
    build:
      context: services/users/
    environment:
      AUTH_URL: "${AUTH_URL}"
      POSTGRES_USER : "${POSTGRES_USER}"
      POSTGRES_PASSWORD : "${POSTGRES_PASSWORD}"
      CLIENT_ID : "${CLIENT_ID}"
      CLIENT_SECRET : "${CLIENT_SECRET}"
      REDIRECT_URI : "${REDIRECT_URI}"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
    networks:
      - transcendence
    depends_on:
      - postgresql
    restart: always

  website:
    container_name: website
    image:
      website-image
    build:
      context: services/website/
    depends_on:
      - users
    networks:
      - transcendence
    environment:
      POSTGRES_USER : "${POSTGRES_USER}"
      POSTGRES_PASSWORD : "${POSTGRES_PASSWORD}"
      SESSION_SERVER : "${SESSION_SERVER}"
      AUTH_URL: "${AUTH_URL}"
    restart: always

  game-server:
    container_name: game-server
    image:
      game-server-image
    build:
      context: services/game-server/
      dockerfile: Dockerfile
    networks:
      - transcendence
    restart: always

  postgresql:
    container_name: postgresql
    image:
      postgresql-image
    build:
      context: services/postgreSQL
    networks:
      - transcendence
    environment:
      POSTGRES_USER : "${POSTGRES_USER}"
      POSTGRES_PASSWORD : "${POSTGRES_PASSWORD}"
    restart: always

networks:
  transcendence:
    driver: bridge